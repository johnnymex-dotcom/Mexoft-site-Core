
@{
    ViewBag.Title = "CRUD_React";
}

<h2>CRUD React</h2>
<div class="code">
    There are ways of how to perform CRUD operations at the server,
    I use <b>axios</b> to do these operations.
    To put it to an immediate place , let's start with Create funtionality.

</div>
<div class="code frame">
    <b>//CREATE or INSERT (POST)</b>
    createSupplier(){
    if (this.validateSupplier() === true) {
    var myData = JSON.stringify({
    SupplierID: 0,
    CompanyName: document.querySelector(".companyName").value,
    ContactName: document.querySelector(".contactName").value,
    ContactTitle: document.querySelector(".contactTitle").value,
    Address: document.querySelector(".address").value,
    City: document.querySelector(".city").value,
    Region: document.querySelector(".region").value,
    PostalCode: document.querySelector(".postalCode").value,
    Country: document.querySelector(".country").value,
    Phone: document.querySelector(".phone").value,
    Fax: document.querySelector(".fax").value,
    HomePage: document.querySelector(".homePage").value
    });
    const headers = { 'Content-Type': 'application/json' };

    axios.<b>post</b>('API/Suppliers', myData, { headers })
    .then((data) => {
    if (data.status === 201) {
    var t = "Saved , OK";
    this.ShowMessage("Created successfully....")
    }
    })
    .catch((err) => {
    console.log(err);
    })
    }

    }
</div>
<div class="code">
    Server-side C# code:
</div>
<div class="code frame">
    // <b>POST: api/Suppliers</b>
    // To protect from overposting attacks, please enable the specific properties you want to bind to, for
    // more details see https://aka.ms/RazorPagesCRUD.
    [HttpPost]
    public async Task<ActionResult<Suppliers>> PostSuppliers(Suppliers suppliers)
    {
        _context.Suppliers.Add(suppliers);
        await _context.SaveChangesAsync();

        return CreatedAtAction("GetSuppliers", new { id = suppliers.SupplierID }, suppliers);
    }
</div>