


@{
    ViewData["Title"] = "GetMethods";
}

<h2>GET Method(s)</h2>
<a href="javascript:history.back();">Go to previous</a>
<div class="code">
    We simply assume that the Web API <b>GET</b> method conforms to Microsoft philosophy ragarding REST webservice methods.
    Like this:
</div>
<div class="code frame">
    // GET: api/Employee
    [HttpGet]
    public IEnumerable<Employee>
        Get()
        .
        .
        .
        // GET: api/Employee/5
        [HttpGet("{id}", Name = "Get")]
        public Employee  Get(int id)
</div>
<div class="code">So we can write the MVC Controller methods as follows:</div>
<div class="code frame">
    using System;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.Extensions.Logging;
    using MyAspNetCoreApplication.Models;
    using System.Net.Http;
    using System.Net.Http.Headers;
    using Newtonsoft.Json;

    //<b>Get all Employees</b>
    public async Task&lt;ActionResult&gt;GetAllEmployees()
    {
        List<Employee> EmpInfo = new List<Employee>();
        using (var client = new HttpClient())
        {
            var Url = "http://" + HttpContext.Request.Host.Value + "/api/Employee";

            //Passing service base url
            client.BaseAddress = new Uri(Url);
            client.DefaultRequestHeaders.Clear();
            ////Define request data format
            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            //Sending request to find web api REST service resource GetAllEmployees using HttpClient
            HttpResponseMessage Res = await client.GetAsync("Employee");

            //Checking the response is successful or not which is sent using HttpClient
            if (Res.IsSuccessStatusCode)
            {
                //Storing the response details recieved from web api
                var EmpResponse = Res.Content.ReadAsStringAsync().Result;

                //Deserializing the response recieved from web api and storing into the Employee list
                EmpInfo = JsonConvert.DeserializeObject&lt;List&lt;Employee&gt;&gt;(EmpResponse);
            }
            //returning the employee list to view
            return View(EmpInfo);
        }
    }

    //<b>Get an Employee with a certain ID</b>
    public async TaskTask&lt;ActionResult&gt; GetEmployee(int Id)
    {
            Employee EmpInfo = new Employee();
            using (var client = new HttpClient())
            {
                var Url = "http://" + HttpContext.Request.Host.Value + "/api/Employee";
                client.BaseAddress = new Uri(Url);
                client.DefaultRequestHeaders.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                HttpResponseMessage Res = await client.GetAsync("Employee/"+Id);

                if (Res.IsSuccessStatusCode)
                {
                    var EmpResponse = Res.Content.ReadAsStringAsync().Result;
                    //Deserializing the response recieved from web api and storing into the Employee object
                    EmpInfo = JsonConvert.DeserializeObject&lt;Employee&gt;(EmpResponse);
                }
                return View(EmpInfo);
            }
    }

</div>
